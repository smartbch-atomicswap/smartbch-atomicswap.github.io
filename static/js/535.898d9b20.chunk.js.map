{"version":3,"file":"static/js/535.898d9b20.chunk.js","mappings":"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","sources":["../node_modules/mainnet-js/src/webhook/WebhookBch.ts","../node_modules/mainnet-js/src/webhook/WebhookWorker.ts"],"sourcesContent":["import SqlProvider from \"../db/SqlProvider.js\";\nimport { TxI } from \"../interface.js\";\nimport { ElectrumRawTransaction } from \"../network/interface.js\";\nimport { balanceResponseFromSatoshi } from \"../util/balanceObjectFromSatoshi.js\";\nimport { Wallet } from \"../wallet/Wif.js\";\nimport { Webhook, WebhookRecurrence, WebhookType } from \"./Webhook.js\";\nimport WebhookWorker from \"./WebhookWorker.js\";\n\nexport class WebhookBch extends Webhook {\n  callback!: (data: any | string | Array<string>) => void;\n  wallet!: Wallet;\n\n  db!: SqlProvider;\n  seenStatuses: string[] = [];\n\n  constructor(hook: Webhook | Object) {\n    super(hook);\n    Object.assign(this, hook);\n  }\n\n  async stop(): Promise<void> {\n    await this.wallet.provider!.unsubscribeFromAddress(\n      this.cashaddr,\n      this.callback\n    );\n  }\n\n  async start(): Promise<void> {\n    const webhookCallback = async (data: string | Array<string>) => {\n      let status: string = \"\";\n      if (typeof data === \"string\") {\n        // subscription acknowledgement notification with current status\n        status = data;\n\n        // we should skip fetching transactions for freshly registered hooks upon acknowledements\n        if (this.status === \"\") {\n          return;\n        }\n      } else if (data instanceof Array) {\n        status = data[1];\n        if (data[0] !== this.cashaddr) {\n          // console.warn(\"Address missmatch, skipping\", data[0], this.cashaddr);\n          return;\n        }\n      } else {\n        return;\n      }\n\n      if (status != this.status && this.seenStatuses.indexOf(status) === -1) {\n        this.seenStatuses.push(status);\n        await this.handler(status);\n      }\n    };\n\n    this.callback = webhookCallback;\n    this.wallet = await Wallet.fromCashaddr(this.cashaddr);\n    await this.wallet.provider!.subscribeToAddress(\n      this.cashaddr,\n      this.callback\n    );\n  }\n\n  async handler(status: string): Promise<void> {\n    // console.debug(\"Dispatching action for a webhook\", this);\n    // get transactions\n    const history: TxI[] = await this.wallet.provider!.getHistory(\n      this.cashaddr\n    );\n\n    // figure out which transactions to send to the hook\n    let txs: TxI[] = [];\n\n    if (status === \"\") {\n      // send the last transaction only if no tracking was done\n      txs = history.slice(-1);\n    } else {\n      // reverse history for faster search\n      const revHistory = history.reverse();\n      // update height of transactions, which are now confirmed\n      this.tx_seen = this.tx_seen.map((seenTx) => {\n        if (seenTx.height <= 0) {\n          const histTx = revHistory.find(\n            (val) => val.tx_hash === seenTx.tx_hash\n          );\n          if (histTx) {\n            seenTx.height = histTx.height;\n          }\n        }\n        return seenTx;\n      });\n\n      const seenHashes = this.tx_seen.map((val) => val.tx_hash);\n      txs = history.filter(\n        (val) =>\n          (val.height >= this.last_height || val.height <= 0) &&\n          !seenHashes.includes(val.tx_hash)\n      );\n    }\n\n    let shouldUpdateStatus: boolean = true;\n\n    for (const tx of txs) {\n      // watching transactions\n      let result: boolean = false;\n\n      if (this.type.indexOf(\"transaction:\") >= 0) {\n        // console.debug(\"Getting raw tx\", tx.tx_hash);\n        const rawTx: ElectrumRawTransaction =\n          await this.wallet.provider!.getRawTransactionObject(tx.tx_hash);\n        const parentTxs: ElectrumRawTransaction[] = await Promise.all(\n          rawTx.vin.map((t) =>\n            this.wallet.provider!.getRawTransactionObject(t.txid)\n          )\n        );\n        // console.debug(\"Got raw tx\", JSON.stringify(rawTx, null, 2));\n        const haveAddressInOutputs: boolean = rawTx.vout.some((val) =>\n          val.scriptPubKey.addresses.includes(this.cashaddr)\n        );\n        const haveAddressInParentOutputs: boolean = parentTxs.some((parent) =>\n          parent.vout.some((val) =>\n            val.scriptPubKey.addresses.includes(this.cashaddr)\n          )\n        );\n\n        const wantsIn: boolean = this.type.indexOf(\"in\") >= 0;\n        const wantsOut: boolean = this.type.indexOf(\"out\") >= 0;\n\n        const txDirection: string =\n          haveAddressInParentOutputs && haveAddressInOutputs\n            ? WebhookType.transactionInOut\n            : haveAddressInParentOutputs\n            ? WebhookType.transactionOut\n            : WebhookType.transactionIn;\n\n        if (wantsIn && haveAddressInOutputs) {\n          result = await this.post({\n            direction: txDirection,\n            data: rawTx,\n          });\n        } else if (wantsOut && haveAddressInParentOutputs) {\n          result = await this.post({\n            direction: txDirection,\n            data: rawTx,\n          });\n        } else {\n          // not interested in this transaction\n          continue;\n        }\n      } else if (this.type === WebhookType.balance) {\n        // watching address balance\n        const balanceSat = await this.wallet.provider!.getBalance(\n          this.cashaddr\n        );\n        const balanceObject = await balanceResponseFromSatoshi(balanceSat);\n        result = await this.post(balanceObject);\n      }\n\n      if (result) {\n        this.tx_seen.push(tx);\n        await this.db.setWebhookSeenTxLastHeight(\n          this.id!,\n          this.tx_seen,\n          this.last_height\n        );\n      } else {\n        // console.debug(\"Failed to execute webhook\", hook);\n        shouldUpdateStatus = false;\n      }\n    }\n\n    // successful run\n    if (shouldUpdateStatus) {\n      if (this.recurrence === WebhookRecurrence.once) {\n        // we have to notify the worker about end of life\n        await (await WebhookWorker.instance()).stopHook(this);\n        await this.destroy();\n        return;\n      }\n\n      this.status = status;\n      await this.db.setWebhookStatus(this.id!, status);\n\n      // update last_height and truncate tx_seen\n      const maxHeight = Math.max(...this.tx_seen.map((val) => val.height));\n      if (maxHeight >= this.last_height) {\n        this.last_height = maxHeight;\n        this.tx_seen = this.tx_seen.filter(\n          (val) => val.height === maxHeight || val.height <= 0\n        );\n        await this.db.setWebhookSeenTxLastHeight(\n          this.id!,\n          this.tx_seen,\n          this.last_height\n        );\n      }\n    }\n  }\n}\n","import SqlProvider from \"../db/SqlProvider.js\";\nimport { RegisterWebhookParams } from \"./interface.js\";\n\nimport { Webhook } from \"./Webhook\";\n\nexport default class WebhookWorker {\n  activeHooks: Map<number, Webhook> = new Map();\n  callbacks: Map<number, (data: any | string | Array<string>) => void> =\n    new Map();\n  db: SqlProvider;\n  checkInterval: any = undefined;\n\n  private static _instance: WebhookWorker;\n\n  static async instance() {\n    if (!WebhookWorker._instance) {\n      WebhookWorker._instance = new WebhookWorker();\n      await WebhookWorker._instance.init();\n    }\n\n    return WebhookWorker._instance;\n  }\n\n  constructor() {\n    this.db = new SqlProvider();\n  }\n\n  async init(): Promise<void> {\n    await this.db.init();\n\n    await this.evictOldHooks();\n    await this.pickupHooks(true);\n    if (!this.checkInterval) {\n      this.checkInterval = setInterval(async () => {\n        await this.evictOldHooks();\n        await this.pickupHooks(true);\n      }, 5 * 60 * 1000);\n    }\n  }\n\n  async destroy(): Promise<void> {\n    await this.stopAll();\n    if (this.checkInterval) {\n      clearInterval(this.checkInterval);\n      this.checkInterval = undefined;\n    }\n  }\n\n  async pickupHooks(start: boolean = false): Promise<void> {\n    const hooks: Webhook[] = await this.db.getWebhooks();\n    for (const hook of hooks) {\n      if (!this.activeHooks.has(hook.id!)) {\n        this.activeHooks.set(hook.id!, hook);\n        if (start) {\n          await hook.start();\n        }\n      }\n    }\n  }\n\n  async evictOldHooks(): Promise<void> {\n    const now = new Date();\n    const dbHooks = await this.db.getWebhooks();\n    for (const hook of dbHooks) {\n      if (now >= hook.expires_at) {\n        // console.debug(\"Evicting expired hook with id\", hook.id, new Date(), hook.expires_at);\n        if (this.activeHooks.has(hook.id!)) {\n          await this.stopHook(hook);\n        }\n        await this.db.deleteWebhook(hook.id!);\n      }\n    }\n  }\n\n  async registerWebhook(\n    params: RegisterWebhookParams,\n    start: boolean = true\n  ): Promise<number> {\n    const webhook = await this.db.addWebhook(params);\n    if (start) {\n      this.activeHooks.set(webhook.id!, webhook);\n      await webhook.start();\n    }\n    return webhook.id!;\n  }\n\n  async getWebhook(id: number): Promise<Webhook | undefined> {\n    if (this.activeHooks.has(id)) {\n      return this.activeHooks.get(id)!;\n    }\n\n    return await this.db.getWebhook(id);\n  }\n\n  async deleteWebhook(id: number): Promise<void> {\n    if (this.activeHooks.has(id)) {\n      await this.stopHook(this.activeHooks.get(id)!);\n    }\n    await this.db.deleteWebhook(id);\n  }\n\n  async deleteAllWebhooks(): Promise<void> {\n    await this.stopAll();\n    await this.db.clearWebhooks();\n  }\n\n  async stopAll(): Promise<void> {\n    for (const [, hook] of this.activeHooks) {\n      await this.stopHook(hook);\n    }\n  }\n\n  async stopHook(hook: Webhook): Promise<void> {\n    if (this.activeHooks.has(hook.id!)) {\n      await hook.stop();\n      this.activeHooks.delete(hook.id!);\n    }\n  }\n}\n"],"names":["WebhookBch","_Webhook","_inherits","_super","_createSuper","hook","_this","_classCallCheck","call","seenStatuses","Object","assign","_assertThisInitialized","_createClass","key","value","_stop","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","this","wallet","provider","unsubscribeFromAddress","cashaddr","callback","stop","apply","arguments","_start","_callee3","webhookCallback","_this2","_context3","_ref","_callee2","data","status","_context2","abrupt","Array","indexOf","push","handler","_x","Wallet","fromCashaddr","sent","subscribeToAddress","_handler","_callee4","history","txs","revHistory","seenHashes","shouldUpdateStatus","_iterator","_step","tx","result","rawTx","parentTxs","haveAddressInOutputs","haveAddressInParentOutputs","wantsIn","wantsOut","txDirection","balanceSat","balanceObject","maxHeight","_this3","_context4","getHistory","slice","reverse","tx_seen","map","seenTx","height","histTx","find","val","tx_hash","filter","last_height","includes","_createForOfIteratorHelper","s","n","done","type","getRawTransactionObject","Promise","all","vin","t","txid","vout","some","scriptPubKey","addresses","parent","WebhookType","transactionInOut","transactionOut","transactionIn","post","direction","balance","getBalance","balanceResponseFromSatoshi","db","setWebhookSeenTxLastHeight","id","t0","e","f","finish","recurrence","WebhookRecurrence","once","WebhookWorker","instance","stopHook","destroy","setWebhookStatus","Math","max","_toConsumableArray","_x2","Webhook","activeHooks","Map","callbacks","checkInterval","undefined","SqlProvider","_init","init","evictOldHooks","pickupHooks","setInterval","_destroy","stopAll","clearInterval","_pickupHooks","start","hooks","_args4","length","getWebhooks","has","set","_evictOldHooks","_callee5","now","dbHooks","_iterator2","_step2","_context5","Date","expires_at","deleteWebhook","_registerWebhook","_callee6","params","webhook","_args6","_context6","addWebhook","_getWebhook","_callee7","_context7","get","getWebhook","_deleteWebhook","_callee8","_context8","_x3","_deleteAllWebhooks","_callee9","_context9","clearWebhooks","_stopAll","_callee10","_iterator3","_step3","_step3$value","_context10","_slicedToArray","_stopHook","_callee11","_context11","delete","_x4","_instance","_callee12","_context12"],"sourceRoot":""}